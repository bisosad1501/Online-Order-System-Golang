openapi: 3.0.0
info:
  title: Order Service API
  description: API for managing orders in the online order processing system
  version: 1.0.0
servers:
  - url: http://localhost:8081
    description: Local development server
paths:
  /orders:
    get:
      summary: Get all orders
      description: Returns a list of all orders
      parameters:
        - name: customer_id
          in: query
          description: Filter orders by customer ID
          required: false
          schema:
            type: string
        - name: status
          in: query
          description: Filter orders by status
          required: false
          schema:
            type: string
            enum: [PENDING, CONFIRMED, PAID, SHIPPED, DELIVERED, CANCELLED]
      responses:
        '200':
          description: A list of orders
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
    post:
      summary: Create a new order
      description: Creates a new order with the provided information
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrderRequest'
      responses:
        '201':
          description: Order created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /orders/{id}:
    get:
      summary: Get order by ID
      description: Returns a single order by ID
      parameters:
        - name: id
          in: path
          description: Order ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Order found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '404':
          description: Order not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /orders/{id}/status:
    put:
      summary: Update order status
      description: Updates the status of an order
      parameters:
        - name: id
          in: path
          description: Order ID
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  enum: [PENDING, CONFIRMED, PAID, SHIPPED, DELIVERED, CANCELLED]
              required:
                - status
      responses:
        '200':
          description: Order status updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '404':
          description: Order not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /orders/{id}/retry-payment:
    post:
      summary: Retry payment for a failed order
      description: Retries payment for an order that failed due to payment issues
      parameters:
        - name: id
          in: path
          description: Order ID
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                payment_method:
                  type: string
                  enum: [credit_card, debit_card, paypal, bank_transfer, card]
                  description: Payment method
                card_number:
                  type: string
                  description: Credit/debit card number (if applicable)
                expiry_month:
                  type: string
                  description: Card expiry month (if applicable)
                expiry_year:
                  type: string
                  description: Card expiry year (if applicable)
                cvv:
                  type: string
                  description: Card CVV (if applicable)
              required:
                - payment_method
      responses:
        '200':
          description: Payment retried successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Order not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    CreateOrderRequest:
      type: object
      properties:
        customer_id:
          type: string
          description: ID of the customer placing the order
        items:
          type: array
          items:
            type: object
            properties:
              product_id:
                type: string
                description: ID of the product
              quantity:
                type: integer
                description: Quantity of the product
              price:
                type: number
                format: float
                description: Price of the product
            required:
              - product_id
              - quantity
              - price
        shipping_address:
          type: string
          description: Shipping address for the order
        payment_method:
          type: string
          enum: [credit_card, debit_card, paypal, bank_transfer, card]
          description: Payment method
        payment_details:
          type: object
          properties:
            card_number:
              type: string
              description: Credit/debit card number (if applicable)
            expiry_month:
              type: integer
              description: Card expiry month (if applicable)
            expiry_year:
              type: integer
              description: Card expiry year (if applicable)
            cvv:
              type: string
              description: Card CVV (if applicable)
      required:
        - customer_id
        - items
        - shipping_address
        - payment_method
    Order:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the order
        customer_id:
          type: string
          description: ID of the customer who placed the order
        status:
          type: string
          enum: [PENDING, CONFIRMED, PAID, SHIPPED, DELIVERED, CANCELLED]
          description: Current status of the order
        total_amount:
          type: number
          format: float
          description: Total amount of the order
        shipping_address:
          type: string
          description: Shipping address for the order
        items:
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'
        created_at:
          type: string
          format: date-time
          description: Time when the order was created
        updated_at:
          type: string
          format: date-time
          description: Time when the order was last updated
    OrderItem:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the order item
        order_id:
          type: string
          description: ID of the order this item belongs to
        product_id:
          type: string
          description: ID of the product
        quantity:
          type: integer
          description: Quantity of the product
        price:
          type: number
          format: float
          description: Price of the product
    Error:
      type: object
      properties:
        error:
          type: string
          description: Error message
